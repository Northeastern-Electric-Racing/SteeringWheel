ARM GAS  /tmp/ccCSrPeD.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.MX_GPIO_Init,"ax",%progbits
  20              		.align	1
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	MX_GPIO_Init:
  26              	.LFB140:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include "stdio.h"
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
ARM GAS  /tmp/ccCSrPeD.s 			page 2


  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* USER CODE END PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/main.c **** FDCAN_HandleTypeDef hfdcan1;
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** TIM_HandleTypeDef htim4;
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** UART_HandleTypeDef huart2;
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* USER CODE BEGIN PV */
  50:Core/Src/main.c **** FDCAN_TxHeaderTypeDef tx_header;
  51:Core/Src/main.c **** uint8_t can_message_content[8];
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** uint8_t button_inputs;
  54:Core/Src/main.c **** uint8_t paddle_inputs;
  55:Core/Src/main.c **** uint32_t last_tick;
  56:Core/Src/main.c **** /* USER CODE END PV */
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  59:Core/Src/main.c **** void SystemClock_Config(void);
  60:Core/Src/main.c **** static void MX_GPIO_Init(void);
  61:Core/Src/main.c **** static void MX_FDCAN1_Init(void);
  62:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
  63:Core/Src/main.c **** static void MX_TIM4_Init(void);
  64:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** /* USER CODE END PFP */
  67:Core/Src/main.c **** 
  68:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  69:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  70:Core/Src/main.c **** 
  71:Core/Src/main.c **** /* USER CODE END 0 */
  72:Core/Src/main.c **** 
  73:Core/Src/main.c **** /**
  74:Core/Src/main.c ****   * @brief  The application entry point.
  75:Core/Src/main.c ****   * @retval int
  76:Core/Src/main.c ****   */
  77:Core/Src/main.c **** int main(void)
  78:Core/Src/main.c **** {
  79:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  80:Core/Src/main.c **** 
  81:Core/Src/main.c ****   /* USER CODE END 1 */
  82:Core/Src/main.c **** 
  83:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  84:Core/Src/main.c **** 
  85:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  86:Core/Src/main.c ****   HAL_Init();
  87:Core/Src/main.c **** 
  88:Core/Src/main.c ****   /* USER CODE BEGIN Init */
ARM GAS  /tmp/ccCSrPeD.s 			page 3


  89:Core/Src/main.c **** 
  90:Core/Src/main.c ****   /* USER CODE END Init */
  91:Core/Src/main.c **** 
  92:Core/Src/main.c ****   /* Configure the system clock */
  93:Core/Src/main.c ****   SystemClock_Config();
  94:Core/Src/main.c **** 
  95:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  96:Core/Src/main.c **** 
  97:Core/Src/main.c ****   /* USER CODE END SysInit */
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****   /* Initialize all configured peripherals */
 100:Core/Src/main.c ****   MX_GPIO_Init();
 101:Core/Src/main.c ****   MX_FDCAN1_Init();
 102:Core/Src/main.c ****   MX_USART2_UART_Init();
 103:Core/Src/main.c ****   MX_TIM4_Init();
 104:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 105:Core/Src/main.c ****   last_tick = 0;
 106:Core/Src/main.c ****   tx_header.Identifier = 0x680;
 107:Core/Src/main.c ****   tx_header.IdType = FDCAN_STANDARD_ID;
 108:Core/Src/main.c ****   tx_header.TxFrameType = FDCAN_DATA_FRAME;
 109:Core/Src/main.c ****   tx_header.DataLength = FDCAN_DLC_BYTES_8; // Specifies the number of data bytes to be transmitted
 110:Core/Src/main.c ****   tx_header.BitRateSwitch = FDCAN_BRS_OFF;
 111:Core/Src/main.c ****   tx_header.FDFormat = FDCAN_CLASSIC_CAN;
 112:Core/Src/main.c ****   tx_header.TxEventFifoControl = FDCAN_NO_TX_EVENTS;
 113:Core/Src/main.c **** 
 114:Core/Src/main.c **** 
 115:Core/Src/main.c ****    HAL_TIM_Base_Start_IT(&htim4);
 116:Core/Src/main.c ****   /* USER CODE END 2 */
 117:Core/Src/main.c **** 
 118:Core/Src/main.c ****   /* Infinite loop */
 119:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 120:Core/Src/main.c ****   while (1)
 121:Core/Src/main.c ****   {
 122:Core/Src/main.c ****     /* USER CODE END WHILE */
 123:Core/Src/main.c **** 
 124:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 125:Core/Src/main.c ****     // Connectors from right to left mapped to bits 0 through 7. J6 (last connector on the left) is
 126:Core/Src/main.c ****     //| MSB:J10 | J12 | J7 | J9 | J11 | J13 | J5 | J8:LSB |
 127:Core/Src/main.c ****     button_inputs = 0x00;
 128:Core/Src/main.c ****     button_inputs = button_inputs | HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_13);        // PB6, J8
 129:Core/Src/main.c ****     button_inputs = button_inputs | (HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_14)) << 1; // PB5, J5
 130:Core/Src/main.c ****     button_inputs = button_inputs | (HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_15)) << 2; // PB4, J13
 131:Core/Src/main.c ****     button_inputs = button_inputs | (HAL_GPIO_ReadPin(GPIOF, GPIO_PIN_1)) << 3;  // PB3, J11
 132:Core/Src/main.c ****     button_inputs = button_inputs | (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_0)) << 4;  // PB2, J9
 133:Core/Src/main.c ****     button_inputs = button_inputs | (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_1)) << 5;  // PB1, J7
 134:Core/Src/main.c ****     button_inputs = button_inputs | (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)) << 6;  // PB9, J12
 135:Core/Src/main.c ****     button_inputs = button_inputs | (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_0)) << 7;  // PB8, J10
 136:Core/Src/main.c **** 
 137:Core/Src/main.c ****     paddle_inputs = 0x00;
 138:Core/Src/main.c ****     paddle_inputs = paddle_inputs | HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_5);        // PA5, J1
 139:Core/Src/main.c ****     paddle_inputs = paddle_inputs | (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6)) << 1; // PA6, J2
 140:Core/Src/main.c ****     paddle_inputs = paddle_inputs | (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_1)) << 2; // PB7
 141:Core/Src/main.c **** 
 142:Core/Src/main.c ****     // Defining CAN message to be sent
 143:Core/Src/main.c ****     can_message_content[0] = button_inputs;
 144:Core/Src/main.c ****     can_message_content[1] = paddle_inputs;
 145:Core/Src/main.c ****     can_message_content[2] = 0x00;
ARM GAS  /tmp/ccCSrPeD.s 			page 4


 146:Core/Src/main.c ****     can_message_content[3] = 0x00;
 147:Core/Src/main.c ****     can_message_content[4] = 0x00;
 148:Core/Src/main.c ****     can_message_content[5] = 0x00;
 149:Core/Src/main.c ****     can_message_content[6] = 0x00;
 150:Core/Src/main.c ****     can_message_content[7] = 0x00;
 151:Core/Src/main.c **** 
 152:Core/Src/main.c **** 
 153:Core/Src/main.c ****   }
 154:Core/Src/main.c ****   /* USER CODE END 3 */
 155:Core/Src/main.c **** }
 156:Core/Src/main.c **** 
 157:Core/Src/main.c **** /**
 158:Core/Src/main.c ****   * @brief System Clock Configuration
 159:Core/Src/main.c ****   * @retval None
 160:Core/Src/main.c ****   */
 161:Core/Src/main.c **** void SystemClock_Config(void)
 162:Core/Src/main.c **** {
 163:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 164:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 165:Core/Src/main.c **** 
 166:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 167:Core/Src/main.c ****   */
 168:Core/Src/main.c ****   HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1);
 169:Core/Src/main.c **** 
 170:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 171:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 172:Core/Src/main.c ****   */
 173:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 174:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 175:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 176:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 177:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 178:Core/Src/main.c ****   {
 179:Core/Src/main.c ****     Error_Handler();
 180:Core/Src/main.c ****   }
 181:Core/Src/main.c **** 
 182:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 183:Core/Src/main.c ****   */
 184:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 185:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 186:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 187:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 188:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 189:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 190:Core/Src/main.c **** 
 191:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 192:Core/Src/main.c ****   {
 193:Core/Src/main.c ****     Error_Handler();
 194:Core/Src/main.c ****   }
 195:Core/Src/main.c **** }
 196:Core/Src/main.c **** 
 197:Core/Src/main.c **** /**
 198:Core/Src/main.c ****   * @brief FDCAN1 Initialization Function
 199:Core/Src/main.c ****   * @param None
 200:Core/Src/main.c ****   * @retval None
 201:Core/Src/main.c ****   */
 202:Core/Src/main.c **** static void MX_FDCAN1_Init(void)
ARM GAS  /tmp/ccCSrPeD.s 			page 5


 203:Core/Src/main.c **** {
 204:Core/Src/main.c **** 
 205:Core/Src/main.c ****   /* USER CODE BEGIN FDCAN1_Init 0 */
 206:Core/Src/main.c **** 
 207:Core/Src/main.c ****   /* USER CODE END FDCAN1_Init 0 */
 208:Core/Src/main.c **** 
 209:Core/Src/main.c ****   /* USER CODE BEGIN FDCAN1_Init 1 */
 210:Core/Src/main.c **** 
 211:Core/Src/main.c ****   /* USER CODE END FDCAN1_Init 1 */
 212:Core/Src/main.c ****   hfdcan1.Instance = FDCAN1;
 213:Core/Src/main.c ****   hfdcan1.Init.ClockDivider = FDCAN_CLOCK_DIV1;
 214:Core/Src/main.c ****   hfdcan1.Init.FrameFormat = FDCAN_FRAME_CLASSIC;
 215:Core/Src/main.c ****   hfdcan1.Init.Mode = FDCAN_MODE_NORMAL;
 216:Core/Src/main.c ****   hfdcan1.Init.AutoRetransmission = DISABLE;
 217:Core/Src/main.c ****   hfdcan1.Init.TransmitPause = DISABLE;
 218:Core/Src/main.c ****   hfdcan1.Init.ProtocolException = DISABLE;
 219:Core/Src/main.c ****   hfdcan1.Init.NominalPrescaler = 1;
 220:Core/Src/main.c ****   hfdcan1.Init.NominalSyncJumpWidth = 1;
 221:Core/Src/main.c ****   hfdcan1.Init.NominalTimeSeg1 = 13;
 222:Core/Src/main.c ****   hfdcan1.Init.NominalTimeSeg2 = 2;
 223:Core/Src/main.c ****   hfdcan1.Init.DataPrescaler = 1;
 224:Core/Src/main.c ****   hfdcan1.Init.DataSyncJumpWidth = 1;
 225:Core/Src/main.c ****   hfdcan1.Init.DataTimeSeg1 = 1;
 226:Core/Src/main.c ****   hfdcan1.Init.DataTimeSeg2 = 1;
 227:Core/Src/main.c ****   hfdcan1.Init.StdFiltersNbr = 0;
 228:Core/Src/main.c ****   hfdcan1.Init.ExtFiltersNbr = 0;
 229:Core/Src/main.c ****   hfdcan1.Init.TxFifoQueueMode = FDCAN_TX_FIFO_OPERATION;
 230:Core/Src/main.c ****   if (HAL_FDCAN_Init(&hfdcan1) != HAL_OK)
 231:Core/Src/main.c ****   {
 232:Core/Src/main.c ****     Error_Handler();
 233:Core/Src/main.c ****   }
 234:Core/Src/main.c ****   /* USER CODE BEGIN FDCAN1_Init 2 */
 235:Core/Src/main.c ****   if (HAL_FDCAN_Start(&hfdcan1) != HAL_OK) {
 236:Core/Src/main.c ****       Error_Handler();
 237:Core/Src/main.c ****   }
 238:Core/Src/main.c **** 
 239:Core/Src/main.c ****   /* USER CODE END FDCAN1_Init 2 */
 240:Core/Src/main.c **** 
 241:Core/Src/main.c **** }
 242:Core/Src/main.c **** 
 243:Core/Src/main.c **** /**
 244:Core/Src/main.c ****   * @brief TIM4 Initialization Function
 245:Core/Src/main.c ****   * @param None
 246:Core/Src/main.c ****   * @retval None
 247:Core/Src/main.c ****   */
 248:Core/Src/main.c **** static void MX_TIM4_Init(void)
 249:Core/Src/main.c **** {
 250:Core/Src/main.c **** 
 251:Core/Src/main.c ****   /* USER CODE BEGIN TIM4_Init 0 */
 252:Core/Src/main.c **** 
 253:Core/Src/main.c ****   /* USER CODE END TIM4_Init 0 */
 254:Core/Src/main.c **** 
 255:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 256:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 257:Core/Src/main.c **** 
 258:Core/Src/main.c ****   /* USER CODE BEGIN TIM4_Init 1 */
 259:Core/Src/main.c **** 
ARM GAS  /tmp/ccCSrPeD.s 			page 6


 260:Core/Src/main.c ****   /* USER CODE END TIM4_Init 1 */
 261:Core/Src/main.c ****   htim4.Instance = TIM4;
 262:Core/Src/main.c ****   htim4.Init.Prescaler = 100 -1;
 263:Core/Src/main.c ****   htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 264:Core/Src/main.c ****   htim4.Init.Period = 1279;
 265:Core/Src/main.c ****   htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 266:Core/Src/main.c ****   htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 267:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 268:Core/Src/main.c ****   {
 269:Core/Src/main.c ****     Error_Handler();
 270:Core/Src/main.c ****   }
 271:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 272:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim4, &sClockSourceConfig) != HAL_OK)
 273:Core/Src/main.c ****   {
 274:Core/Src/main.c ****     Error_Handler();
 275:Core/Src/main.c ****   }
 276:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_UPDATE;
 277:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 278:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 279:Core/Src/main.c ****   {
 280:Core/Src/main.c ****     Error_Handler();
 281:Core/Src/main.c ****   }
 282:Core/Src/main.c ****   /* USER CODE BEGIN TIM4_Init 2 */
 283:Core/Src/main.c **** 
 284:Core/Src/main.c ****   /* USER CODE END TIM4_Init 2 */
 285:Core/Src/main.c **** 
 286:Core/Src/main.c **** }
 287:Core/Src/main.c **** 
 288:Core/Src/main.c **** /**
 289:Core/Src/main.c ****   * @brief USART2 Initialization Function
 290:Core/Src/main.c ****   * @param None
 291:Core/Src/main.c ****   * @retval None
 292:Core/Src/main.c ****   */
 293:Core/Src/main.c **** static void MX_USART2_UART_Init(void)
 294:Core/Src/main.c **** {
 295:Core/Src/main.c **** 
 296:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 0 */
 297:Core/Src/main.c **** 
 298:Core/Src/main.c ****   /* USER CODE END USART2_Init 0 */
 299:Core/Src/main.c **** 
 300:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 1 */
 301:Core/Src/main.c **** 
 302:Core/Src/main.c ****   /* USER CODE END USART2_Init 1 */
 303:Core/Src/main.c ****   huart2.Instance = USART2;
 304:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 305:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 306:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 307:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 308:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 309:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 310:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 311:Core/Src/main.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 312:Core/Src/main.c ****   huart2.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 313:Core/Src/main.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 314:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 315:Core/Src/main.c ****   {
 316:Core/Src/main.c ****     Error_Handler();
ARM GAS  /tmp/ccCSrPeD.s 			page 7


 317:Core/Src/main.c ****   }
 318:Core/Src/main.c ****   if (HAL_UARTEx_SetTxFifoThreshold(&huart2, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
 319:Core/Src/main.c ****   {
 320:Core/Src/main.c ****     Error_Handler();
 321:Core/Src/main.c ****   }
 322:Core/Src/main.c ****   if (HAL_UARTEx_SetRxFifoThreshold(&huart2, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
 323:Core/Src/main.c ****   {
 324:Core/Src/main.c ****     Error_Handler();
 325:Core/Src/main.c ****   }
 326:Core/Src/main.c ****   if (HAL_UARTEx_DisableFifoMode(&huart2) != HAL_OK)
 327:Core/Src/main.c ****   {
 328:Core/Src/main.c ****     Error_Handler();
 329:Core/Src/main.c ****   }
 330:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 2 */
 331:Core/Src/main.c ****   printf("Retargeted usart!");
 332:Core/Src/main.c **** 
 333:Core/Src/main.c ****   /* USER CODE END USART2_Init 2 */
 334:Core/Src/main.c **** 
 335:Core/Src/main.c **** }
 336:Core/Src/main.c **** 
 337:Core/Src/main.c **** /**
 338:Core/Src/main.c ****   * @brief GPIO Initialization Function
 339:Core/Src/main.c ****   * @param None
 340:Core/Src/main.c ****   * @retval None
 341:Core/Src/main.c ****   */
 342:Core/Src/main.c **** static void MX_GPIO_Init(void)
 343:Core/Src/main.c **** {
  28              		.loc 1 343 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 40
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 4, -8
  36              		.cfi_offset 14, -4
  37 0002 8AB0     		sub	sp, sp, #40
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 48
 344:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  40              		.loc 1 344 3 view .LVU1
  41              		.loc 1 344 20 is_stmt 0 view .LVU2
  42 0004 0024     		movs	r4, #0
  43 0006 0594     		str	r4, [sp, #20]
  44 0008 0694     		str	r4, [sp, #24]
  45 000a 0794     		str	r4, [sp, #28]
  46 000c 0894     		str	r4, [sp, #32]
  47 000e 0994     		str	r4, [sp, #36]
 345:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 346:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 347:Core/Src/main.c **** 
 348:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 349:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  48              		.loc 1 349 3 is_stmt 1 view .LVU3
  49              	.LBB4:
  50              		.loc 1 349 3 view .LVU4
  51              		.loc 1 349 3 view .LVU5
ARM GAS  /tmp/ccCSrPeD.s 			page 8


  52 0010 234B     		ldr	r3, .L3
  53 0012 DA6C     		ldr	r2, [r3, #76]
  54 0014 42F00402 		orr	r2, r2, #4
  55 0018 DA64     		str	r2, [r3, #76]
  56              		.loc 1 349 3 view .LVU6
  57 001a DA6C     		ldr	r2, [r3, #76]
  58 001c 02F00402 		and	r2, r2, #4
  59 0020 0192     		str	r2, [sp, #4]
  60              		.loc 1 349 3 view .LVU7
  61 0022 019A     		ldr	r2, [sp, #4]
  62              	.LBE4:
  63              		.loc 1 349 3 view .LVU8
 350:Core/Src/main.c ****   __HAL_RCC_GPIOF_CLK_ENABLE();
  64              		.loc 1 350 3 view .LVU9
  65              	.LBB5:
  66              		.loc 1 350 3 view .LVU10
  67              		.loc 1 350 3 view .LVU11
  68 0024 DA6C     		ldr	r2, [r3, #76]
  69 0026 42F02002 		orr	r2, r2, #32
  70 002a DA64     		str	r2, [r3, #76]
  71              		.loc 1 350 3 view .LVU12
  72 002c DA6C     		ldr	r2, [r3, #76]
  73 002e 02F02002 		and	r2, r2, #32
  74 0032 0292     		str	r2, [sp, #8]
  75              		.loc 1 350 3 view .LVU13
  76 0034 029A     		ldr	r2, [sp, #8]
  77              	.LBE5:
  78              		.loc 1 350 3 view .LVU14
 351:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  79              		.loc 1 351 3 view .LVU15
  80              	.LBB6:
  81              		.loc 1 351 3 view .LVU16
  82              		.loc 1 351 3 view .LVU17
  83 0036 DA6C     		ldr	r2, [r3, #76]
  84 0038 42F00102 		orr	r2, r2, #1
  85 003c DA64     		str	r2, [r3, #76]
  86              		.loc 1 351 3 view .LVU18
  87 003e DA6C     		ldr	r2, [r3, #76]
  88 0040 02F00102 		and	r2, r2, #1
  89 0044 0392     		str	r2, [sp, #12]
  90              		.loc 1 351 3 view .LVU19
  91 0046 039A     		ldr	r2, [sp, #12]
  92              	.LBE6:
  93              		.loc 1 351 3 view .LVU20
 352:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  94              		.loc 1 352 3 view .LVU21
  95              	.LBB7:
  96              		.loc 1 352 3 view .LVU22
  97              		.loc 1 352 3 view .LVU23
  98 0048 DA6C     		ldr	r2, [r3, #76]
  99 004a 42F00202 		orr	r2, r2, #2
 100 004e DA64     		str	r2, [r3, #76]
 101              		.loc 1 352 3 view .LVU24
 102 0050 DB6C     		ldr	r3, [r3, #76]
 103 0052 03F00203 		and	r3, r3, #2
 104 0056 0493     		str	r3, [sp, #16]
 105              		.loc 1 352 3 view .LVU25
ARM GAS  /tmp/ccCSrPeD.s 			page 9


 106 0058 049B     		ldr	r3, [sp, #16]
 107              	.LBE7:
 108              		.loc 1 352 3 view .LVU26
 353:Core/Src/main.c **** 
 354:Core/Src/main.c ****   /*Configure GPIO pins : PC13 PC14 PC15 */
 355:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15;
 109              		.loc 1 355 3 view .LVU27
 110              		.loc 1 355 23 is_stmt 0 view .LVU28
 111 005a 4FF46043 		mov	r3, #57344
 112 005e 0593     		str	r3, [sp, #20]
 356:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 113              		.loc 1 356 3 is_stmt 1 view .LVU29
 357:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 114              		.loc 1 357 3 view .LVU30
 358:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 115              		.loc 1 358 3 view .LVU31
 116 0060 05A9     		add	r1, sp, #20
 117 0062 1048     		ldr	r0, .L3+4
 118 0064 FFF7FEFF 		bl	HAL_GPIO_Init
 119              	.LVL0:
 359:Core/Src/main.c **** 
 360:Core/Src/main.c ****   /*Configure GPIO pin : PF1 */
 361:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_1;
 120              		.loc 1 361 3 view .LVU32
 121              		.loc 1 361 23 is_stmt 0 view .LVU33
 122 0068 0223     		movs	r3, #2
 123 006a 0593     		str	r3, [sp, #20]
 362:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 124              		.loc 1 362 3 is_stmt 1 view .LVU34
 125              		.loc 1 362 24 is_stmt 0 view .LVU35
 126 006c 0694     		str	r4, [sp, #24]
 363:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 127              		.loc 1 363 3 is_stmt 1 view .LVU36
 128              		.loc 1 363 24 is_stmt 0 view .LVU37
 129 006e 0794     		str	r4, [sp, #28]
 364:Core/Src/main.c ****   HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 130              		.loc 1 364 3 is_stmt 1 view .LVU38
 131 0070 05A9     		add	r1, sp, #20
 132 0072 0D48     		ldr	r0, .L3+8
 133 0074 FFF7FEFF 		bl	HAL_GPIO_Init
 134              	.LVL1:
 365:Core/Src/main.c **** 
 366:Core/Src/main.c ****   /*Configure GPIO pins : PA0 PA1 PA5 PA6
 367:Core/Src/main.c ****                            PA7 */
 368:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_5|GPIO_PIN_6
 135              		.loc 1 368 3 view .LVU39
 136              		.loc 1 368 23 is_stmt 0 view .LVU40
 137 0078 E323     		movs	r3, #227
 138 007a 0593     		str	r3, [sp, #20]
 369:Core/Src/main.c ****                           |GPIO_PIN_7;
 370:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 139              		.loc 1 370 3 is_stmt 1 view .LVU41
 140              		.loc 1 370 24 is_stmt 0 view .LVU42
 141 007c 0694     		str	r4, [sp, #24]
 371:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 142              		.loc 1 371 3 is_stmt 1 view .LVU43
 143              		.loc 1 371 24 is_stmt 0 view .LVU44
ARM GAS  /tmp/ccCSrPeD.s 			page 10


 144 007e 0794     		str	r4, [sp, #28]
 372:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 145              		.loc 1 372 3 is_stmt 1 view .LVU45
 146 0080 05A9     		add	r1, sp, #20
 147 0082 4FF09040 		mov	r0, #1207959552
 148 0086 FFF7FEFF 		bl	HAL_GPIO_Init
 149              	.LVL2:
 373:Core/Src/main.c **** 
 374:Core/Src/main.c ****   /*Configure GPIO pins : PB0 PB1 */
 375:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 150              		.loc 1 375 3 view .LVU46
 151              		.loc 1 375 23 is_stmt 0 view .LVU47
 152 008a 0323     		movs	r3, #3
 153 008c 0593     		str	r3, [sp, #20]
 376:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 154              		.loc 1 376 3 is_stmt 1 view .LVU48
 155              		.loc 1 376 24 is_stmt 0 view .LVU49
 156 008e 0694     		str	r4, [sp, #24]
 377:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 157              		.loc 1 377 3 is_stmt 1 view .LVU50
 158              		.loc 1 377 24 is_stmt 0 view .LVU51
 159 0090 0794     		str	r4, [sp, #28]
 378:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 160              		.loc 1 378 3 is_stmt 1 view .LVU52
 161 0092 05A9     		add	r1, sp, #20
 162 0094 0548     		ldr	r0, .L3+12
 163 0096 FFF7FEFF 		bl	HAL_GPIO_Init
 164              	.LVL3:
 379:Core/Src/main.c **** 
 380:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 381:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 382:Core/Src/main.c **** }
 165              		.loc 1 382 1 is_stmt 0 view .LVU53
 166 009a 0AB0     		add	sp, sp, #40
 167              	.LCFI2:
 168              		.cfi_def_cfa_offset 8
 169              		@ sp needed
 170 009c 10BD     		pop	{r4, pc}
 171              	.L4:
 172 009e 00BF     		.align	2
 173              	.L3:
 174 00a0 00100240 		.word	1073876992
 175 00a4 00080048 		.word	1207961600
 176 00a8 00140048 		.word	1207964672
 177 00ac 00040048 		.word	1207960576
 178              		.cfi_endproc
 179              	.LFE140:
 181              		.section	.text._write,"ax",%progbits
 182              		.align	1
 183              		.global	_write
 184              		.syntax unified
 185              		.thumb
 186              		.thumb_func
 188              	_write:
 189              	.LVL4:
 190              	.LFB141:
 383:Core/Src/main.c **** 
ARM GAS  /tmp/ccCSrPeD.s 			page 11


 384:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 385:Core/Src/main.c **** int _write(int fd, char *ptr, int len)
 386:Core/Src/main.c **** {
 191              		.loc 1 386 1 is_stmt 1 view -0
 192              		.cfi_startproc
 193              		@ args = 0, pretend = 0, frame = 0
 194              		@ frame_needed = 0, uses_anonymous_args = 0
 195              		.loc 1 386 1 is_stmt 0 view .LVU55
 196 0000 10B5     		push	{r4, lr}
 197              	.LCFI3:
 198              		.cfi_def_cfa_offset 8
 199              		.cfi_offset 4, -8
 200              		.cfi_offset 14, -4
 201 0002 1446     		mov	r4, r2
 387:Core/Src/main.c ****   HAL_UART_Transmit(&huart2, (uint8_t *)ptr, len, HAL_MAX_DELAY);
 202              		.loc 1 387 3 is_stmt 1 view .LVU56
 203 0004 4FF0FF33 		mov	r3, #-1
 204 0008 92B2     		uxth	r2, r2
 205              	.LVL5:
 206              		.loc 1 387 3 is_stmt 0 view .LVU57
 207 000a 0248     		ldr	r0, .L7
 208              	.LVL6:
 209              		.loc 1 387 3 view .LVU58
 210 000c FFF7FEFF 		bl	HAL_UART_Transmit
 211              	.LVL7:
 388:Core/Src/main.c ****   return len;
 212              		.loc 1 388 3 is_stmt 1 view .LVU59
 389:Core/Src/main.c **** }
 213              		.loc 1 389 1 is_stmt 0 view .LVU60
 214 0010 2046     		mov	r0, r4
 215 0012 10BD     		pop	{r4, pc}
 216              	.LVL8:
 217              	.L8:
 218              		.loc 1 389 1 view .LVU61
 219              		.align	2
 220              	.L7:
 221 0014 00000000 		.word	.LANCHOR0
 222              		.cfi_endproc
 223              	.LFE141:
 225              		.section	.rodata.HAL_TIM_PeriodElapsedCallback.str1.4,"aMS",%progbits,1
 226              		.align	2
 227              	.LC0:
 228 0000 0A0D4C61 		.ascii	"\012\015Last err %ld\015\012\000"
 228      73742065 
 228      72722025 
 228      6C640D0A 
 228      00
 229 0011 000000   		.align	2
 230              	.LC1:
 231 0014 0A0D2042 		.ascii	"\012\015 Bus err %ld\015\012\000"
 231      75732065 
 231      72722025 
 231      6C640D0A 
 231      00
 232              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 233              		.align	1
 234              		.global	HAL_TIM_PeriodElapsedCallback
ARM GAS  /tmp/ccCSrPeD.s 			page 12


 235              		.syntax unified
 236              		.thumb
 237              		.thumb_func
 239              	HAL_TIM_PeriodElapsedCallback:
 240              	.LVL9:
 241              	.LFB142:
 390:Core/Src/main.c **** 
 391:Core/Src/main.c **** 
 392:Core/Src/main.c **** // updates the CAN TX FIFO precisely every 8ms
 393:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 394:Core/Src/main.c **** {
 242              		.loc 1 394 1 is_stmt 1 view -0
 243              		.cfi_startproc
 244              		@ args = 0, pretend = 0, frame = 48
 245              		@ frame_needed = 0, uses_anonymous_args = 0
 246              		.loc 1 394 1 is_stmt 0 view .LVU63
 247 0000 00B5     		push	{lr}
 248              	.LCFI4:
 249              		.cfi_def_cfa_offset 4
 250              		.cfi_offset 14, -4
 251 0002 8DB0     		sub	sp, sp, #52
 252              	.LCFI5:
 253              		.cfi_def_cfa_offset 56
 395:Core/Src/main.c **** 
 396:Core/Src/main.c ****      FDCAN_ProtocolStatusTypeDef proc_stat;
 254              		.loc 1 396 6 is_stmt 1 view .LVU64
 397:Core/Src/main.c ****      HAL_FDCAN_GetProtocolStatus(&hfdcan1, &proc_stat);
 255              		.loc 1 397 6 view .LVU65
 256 0004 01A9     		add	r1, sp, #4
 257 0006 0B48     		ldr	r0, .L13
 258              	.LVL10:
 259              		.loc 1 397 6 is_stmt 0 view .LVU66
 260 0008 FFF7FEFF 		bl	HAL_FDCAN_GetProtocolStatus
 261              	.LVL11:
 398:Core/Src/main.c ****      if (proc_stat.LastErrorCode != 0 || proc_stat.BusOff != 0) {
 262              		.loc 1 398 6 is_stmt 1 view .LVU67
 263              		.loc 1 398 19 is_stmt 0 view .LVU68
 264 000c 0199     		ldr	r1, [sp, #4]
 265              		.loc 1 398 9 view .LVU69
 266 000e 09B9     		cbnz	r1, .L10
 267              		.loc 1 398 51 discriminator 1 view .LVU70
 268 0010 069B     		ldr	r3, [sp, #24]
 269              		.loc 1 398 39 discriminator 1 view .LVU71
 270 0012 33B1     		cbz	r3, .L11
 271              	.L10:
 399:Core/Src/main.c ****     printf("\n\rLast err %ld\r\n", proc_stat.LastErrorCode);
 272              		.loc 1 399 5 is_stmt 1 view .LVU72
 273 0014 0848     		ldr	r0, .L13+4
 274 0016 FFF7FEFF 		bl	printf
 275              	.LVL12:
 400:Core/Src/main.c ****     printf("\n\r Bus err %ld\r\n", proc_stat.BusOff);
 276              		.loc 1 400 5 view .LVU73
 277 001a 0699     		ldr	r1, [sp, #24]
 278 001c 0748     		ldr	r0, .L13+8
 279 001e FFF7FEFF 		bl	printf
 280              	.LVL13:
 281              	.L11:
ARM GAS  /tmp/ccCSrPeD.s 			page 13


 401:Core/Src/main.c ****      }
 402:Core/Src/main.c ****     // Adds another message to the CAN FIFO every 8ms
 403:Core/Src/main.c ****     HAL_FDCAN_AddMessageToTxFifoQ(&hfdcan1, &tx_header, can_message_content);
 282              		.loc 1 403 5 view .LVU74
 283 0022 074A     		ldr	r2, .L13+12
 284 0024 0749     		ldr	r1, .L13+16
 285 0026 0348     		ldr	r0, .L13
 286 0028 FFF7FEFF 		bl	HAL_FDCAN_AddMessageToTxFifoQ
 287              	.LVL14:
 404:Core/Src/main.c **** 
 405:Core/Src/main.c **** }
 288              		.loc 1 405 1 is_stmt 0 view .LVU75
 289 002c 0DB0     		add	sp, sp, #52
 290              	.LCFI6:
 291              		.cfi_def_cfa_offset 4
 292              		@ sp needed
 293 002e 5DF804FB 		ldr	pc, [sp], #4
 294              	.L14:
 295 0032 00BF     		.align	2
 296              	.L13:
 297 0034 00000000 		.word	.LANCHOR1
 298 0038 00000000 		.word	.LC0
 299 003c 14000000 		.word	.LC1
 300 0040 00000000 		.word	.LANCHOR2
 301 0044 00000000 		.word	.LANCHOR3
 302              		.cfi_endproc
 303              	.LFE142:
 305              		.section	.rodata.Error_Handler.str1.4,"aMS",%progbits,1
 306              		.align	2
 307              	.LC2:
 308 0000 4572726F 		.ascii	"Error encountered!\000"
 308      7220656E 
 308      636F756E 
 308      74657265 
 308      642100
 309              		.section	.text.Error_Handler,"ax",%progbits
 310              		.align	1
 311              		.global	Error_Handler
 312              		.syntax unified
 313              		.thumb
 314              		.thumb_func
 316              	Error_Handler:
 317              	.LFB143:
 406:Core/Src/main.c **** 
 407:Core/Src/main.c **** /* USER CODE END 4 */
 408:Core/Src/main.c **** 
 409:Core/Src/main.c **** /**
 410:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 411:Core/Src/main.c ****   * @retval None
 412:Core/Src/main.c ****   */
 413:Core/Src/main.c **** void Error_Handler(void)
 414:Core/Src/main.c **** {
 318              		.loc 1 414 1 is_stmt 1 view -0
 319              		.cfi_startproc
 320              		@ Volatile: function does not return.
 321              		@ args = 0, pretend = 0, frame = 0
 322              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccCSrPeD.s 			page 14


 323 0000 08B5     		push	{r3, lr}
 324              	.LCFI7:
 325              		.cfi_def_cfa_offset 8
 326              		.cfi_offset 3, -8
 327              		.cfi_offset 14, -4
 415:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 416:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 417:Core/Src/main.c ****   __disable_irq();
 328              		.loc 1 417 3 view .LVU77
 329              	.LBB8:
 330              	.LBI8:
 331              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccCSrPeD.s 			page 15


  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
ARM GAS  /tmp/ccCSrPeD.s 			page 16


 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
ARM GAS  /tmp/ccCSrPeD.s 			page 17


 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 332              		.loc 2 207 27 view .LVU78
 333              	.LBB9:
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 334              		.loc 2 209 3 view .LVU79
 335              		.syntax unified
 336              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 337 0002 72B6     		cpsid i
 338              	@ 0 "" 2
ARM GAS  /tmp/ccCSrPeD.s 			page 18


 339              		.thumb
 340              		.syntax unified
 341              	.LBE9:
 342              	.LBE8:
 418:Core/Src/main.c ****   printf("Error encountered!");
 343              		.loc 1 418 3 view .LVU80
 344 0004 0148     		ldr	r0, .L18
 345 0006 FFF7FEFF 		bl	printf
 346              	.LVL15:
 347              	.L16:
 419:Core/Src/main.c ****   while (1)
 348              		.loc 1 419 3 discriminator 1 view .LVU81
 420:Core/Src/main.c ****   {
 421:Core/Src/main.c ****   }
 349              		.loc 1 421 3 discriminator 1 view .LVU82
 419:Core/Src/main.c ****   while (1)
 350              		.loc 1 419 9 discriminator 1 view .LVU83
 351 000a FEE7     		b	.L16
 352              	.L19:
 353              		.align	2
 354              	.L18:
 355 000c 00000000 		.word	.LC2
 356              		.cfi_endproc
 357              	.LFE143:
 359              		.section	.text.MX_FDCAN1_Init,"ax",%progbits
 360              		.align	1
 361              		.syntax unified
 362              		.thumb
 363              		.thumb_func
 365              	MX_FDCAN1_Init:
 366              	.LFB137:
 203:Core/Src/main.c **** 
 367              		.loc 1 203 1 view -0
 368              		.cfi_startproc
 369              		@ args = 0, pretend = 0, frame = 0
 370              		@ frame_needed = 0, uses_anonymous_args = 0
 371 0000 08B5     		push	{r3, lr}
 372              	.LCFI8:
 373              		.cfi_def_cfa_offset 8
 374              		.cfi_offset 3, -8
 375              		.cfi_offset 14, -4
 212:Core/Src/main.c ****   hfdcan1.Init.ClockDivider = FDCAN_CLOCK_DIV1;
 376              		.loc 1 212 3 view .LVU85
 212:Core/Src/main.c ****   hfdcan1.Init.ClockDivider = FDCAN_CLOCK_DIV1;
 377              		.loc 1 212 20 is_stmt 0 view .LVU86
 378 0002 1248     		ldr	r0, .L26
 379 0004 124B     		ldr	r3, .L26+4
 380 0006 0360     		str	r3, [r0]
 213:Core/Src/main.c ****   hfdcan1.Init.FrameFormat = FDCAN_FRAME_CLASSIC;
 381              		.loc 1 213 3 is_stmt 1 view .LVU87
 213:Core/Src/main.c ****   hfdcan1.Init.FrameFormat = FDCAN_FRAME_CLASSIC;
 382              		.loc 1 213 29 is_stmt 0 view .LVU88
 383 0008 0023     		movs	r3, #0
 384 000a 4360     		str	r3, [r0, #4]
 214:Core/Src/main.c ****   hfdcan1.Init.Mode = FDCAN_MODE_NORMAL;
 385              		.loc 1 214 3 is_stmt 1 view .LVU89
 214:Core/Src/main.c ****   hfdcan1.Init.Mode = FDCAN_MODE_NORMAL;
ARM GAS  /tmp/ccCSrPeD.s 			page 19


 386              		.loc 1 214 28 is_stmt 0 view .LVU90
 387 000c 8360     		str	r3, [r0, #8]
 215:Core/Src/main.c ****   hfdcan1.Init.AutoRetransmission = DISABLE;
 388              		.loc 1 215 3 is_stmt 1 view .LVU91
 215:Core/Src/main.c ****   hfdcan1.Init.AutoRetransmission = DISABLE;
 389              		.loc 1 215 21 is_stmt 0 view .LVU92
 390 000e C360     		str	r3, [r0, #12]
 216:Core/Src/main.c ****   hfdcan1.Init.TransmitPause = DISABLE;
 391              		.loc 1 216 3 is_stmt 1 view .LVU93
 216:Core/Src/main.c ****   hfdcan1.Init.TransmitPause = DISABLE;
 392              		.loc 1 216 35 is_stmt 0 view .LVU94
 393 0010 0374     		strb	r3, [r0, #16]
 217:Core/Src/main.c ****   hfdcan1.Init.ProtocolException = DISABLE;
 394              		.loc 1 217 3 is_stmt 1 view .LVU95
 217:Core/Src/main.c ****   hfdcan1.Init.ProtocolException = DISABLE;
 395              		.loc 1 217 30 is_stmt 0 view .LVU96
 396 0012 4374     		strb	r3, [r0, #17]
 218:Core/Src/main.c ****   hfdcan1.Init.NominalPrescaler = 1;
 397              		.loc 1 218 3 is_stmt 1 view .LVU97
 218:Core/Src/main.c ****   hfdcan1.Init.NominalPrescaler = 1;
 398              		.loc 1 218 34 is_stmt 0 view .LVU98
 399 0014 8374     		strb	r3, [r0, #18]
 219:Core/Src/main.c ****   hfdcan1.Init.NominalSyncJumpWidth = 1;
 400              		.loc 1 219 3 is_stmt 1 view .LVU99
 219:Core/Src/main.c ****   hfdcan1.Init.NominalSyncJumpWidth = 1;
 401              		.loc 1 219 33 is_stmt 0 view .LVU100
 402 0016 0122     		movs	r2, #1
 403 0018 4261     		str	r2, [r0, #20]
 220:Core/Src/main.c ****   hfdcan1.Init.NominalTimeSeg1 = 13;
 404              		.loc 1 220 3 is_stmt 1 view .LVU101
 220:Core/Src/main.c ****   hfdcan1.Init.NominalTimeSeg1 = 13;
 405              		.loc 1 220 37 is_stmt 0 view .LVU102
 406 001a 8261     		str	r2, [r0, #24]
 221:Core/Src/main.c ****   hfdcan1.Init.NominalTimeSeg2 = 2;
 407              		.loc 1 221 3 is_stmt 1 view .LVU103
 221:Core/Src/main.c ****   hfdcan1.Init.NominalTimeSeg2 = 2;
 408              		.loc 1 221 32 is_stmt 0 view .LVU104
 409 001c 0D21     		movs	r1, #13
 410 001e C161     		str	r1, [r0, #28]
 222:Core/Src/main.c ****   hfdcan1.Init.DataPrescaler = 1;
 411              		.loc 1 222 3 is_stmt 1 view .LVU105
 222:Core/Src/main.c ****   hfdcan1.Init.DataPrescaler = 1;
 412              		.loc 1 222 32 is_stmt 0 view .LVU106
 413 0020 0221     		movs	r1, #2
 414 0022 0162     		str	r1, [r0, #32]
 223:Core/Src/main.c ****   hfdcan1.Init.DataSyncJumpWidth = 1;
 415              		.loc 1 223 3 is_stmt 1 view .LVU107
 223:Core/Src/main.c ****   hfdcan1.Init.DataSyncJumpWidth = 1;
 416              		.loc 1 223 30 is_stmt 0 view .LVU108
 417 0024 4262     		str	r2, [r0, #36]
 224:Core/Src/main.c ****   hfdcan1.Init.DataTimeSeg1 = 1;
 418              		.loc 1 224 3 is_stmt 1 view .LVU109
 224:Core/Src/main.c ****   hfdcan1.Init.DataTimeSeg1 = 1;
 419              		.loc 1 224 34 is_stmt 0 view .LVU110
 420 0026 8262     		str	r2, [r0, #40]
 225:Core/Src/main.c ****   hfdcan1.Init.DataTimeSeg2 = 1;
 421              		.loc 1 225 3 is_stmt 1 view .LVU111
ARM GAS  /tmp/ccCSrPeD.s 			page 20


 225:Core/Src/main.c ****   hfdcan1.Init.DataTimeSeg2 = 1;
 422              		.loc 1 225 29 is_stmt 0 view .LVU112
 423 0028 C262     		str	r2, [r0, #44]
 226:Core/Src/main.c ****   hfdcan1.Init.StdFiltersNbr = 0;
 424              		.loc 1 226 3 is_stmt 1 view .LVU113
 226:Core/Src/main.c ****   hfdcan1.Init.StdFiltersNbr = 0;
 425              		.loc 1 226 29 is_stmt 0 view .LVU114
 426 002a 0263     		str	r2, [r0, #48]
 227:Core/Src/main.c ****   hfdcan1.Init.ExtFiltersNbr = 0;
 427              		.loc 1 227 3 is_stmt 1 view .LVU115
 227:Core/Src/main.c ****   hfdcan1.Init.ExtFiltersNbr = 0;
 428              		.loc 1 227 30 is_stmt 0 view .LVU116
 429 002c 4363     		str	r3, [r0, #52]
 228:Core/Src/main.c ****   hfdcan1.Init.TxFifoQueueMode = FDCAN_TX_FIFO_OPERATION;
 430              		.loc 1 228 3 is_stmt 1 view .LVU117
 228:Core/Src/main.c ****   hfdcan1.Init.TxFifoQueueMode = FDCAN_TX_FIFO_OPERATION;
 431              		.loc 1 228 30 is_stmt 0 view .LVU118
 432 002e 8363     		str	r3, [r0, #56]
 229:Core/Src/main.c ****   if (HAL_FDCAN_Init(&hfdcan1) != HAL_OK)
 433              		.loc 1 229 3 is_stmt 1 view .LVU119
 229:Core/Src/main.c ****   if (HAL_FDCAN_Init(&hfdcan1) != HAL_OK)
 434              		.loc 1 229 32 is_stmt 0 view .LVU120
 435 0030 C363     		str	r3, [r0, #60]
 230:Core/Src/main.c ****   {
 436              		.loc 1 230 3 is_stmt 1 view .LVU121
 230:Core/Src/main.c ****   {
 437              		.loc 1 230 7 is_stmt 0 view .LVU122
 438 0032 FFF7FEFF 		bl	HAL_FDCAN_Init
 439              	.LVL16:
 230:Core/Src/main.c ****   {
 440              		.loc 1 230 6 view .LVU123
 441 0036 20B9     		cbnz	r0, .L24
 235:Core/Src/main.c ****       Error_Handler();
 442              		.loc 1 235 3 is_stmt 1 view .LVU124
 235:Core/Src/main.c ****       Error_Handler();
 443              		.loc 1 235 7 is_stmt 0 view .LVU125
 444 0038 0448     		ldr	r0, .L26
 445 003a FFF7FEFF 		bl	HAL_FDCAN_Start
 446              	.LVL17:
 235:Core/Src/main.c ****       Error_Handler();
 447              		.loc 1 235 6 view .LVU126
 448 003e 10B9     		cbnz	r0, .L25
 241:Core/Src/main.c **** 
 449              		.loc 1 241 1 view .LVU127
 450 0040 08BD     		pop	{r3, pc}
 451              	.L24:
 232:Core/Src/main.c ****   }
 452              		.loc 1 232 5 is_stmt 1 view .LVU128
 453 0042 FFF7FEFF 		bl	Error_Handler
 454              	.LVL18:
 455              	.L25:
 236:Core/Src/main.c ****   }
 456              		.loc 1 236 7 view .LVU129
 457 0046 FFF7FEFF 		bl	Error_Handler
 458              	.LVL19:
 459              	.L27:
 460 004a 00BF     		.align	2
ARM GAS  /tmp/ccCSrPeD.s 			page 21


 461              	.L26:
 462 004c 00000000 		.word	.LANCHOR1
 463 0050 00640040 		.word	1073767424
 464              		.cfi_endproc
 465              	.LFE137:
 467              		.section	.rodata.MX_USART2_UART_Init.str1.4,"aMS",%progbits,1
 468              		.align	2
 469              	.LC3:
 470 0000 52657461 		.ascii	"Retargeted usart!\000"
 470      72676574 
 470      65642075 
 470      73617274 
 470      2100
 471              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 472              		.align	1
 473              		.syntax unified
 474              		.thumb
 475              		.thumb_func
 477              	MX_USART2_UART_Init:
 478              	.LFB139:
 294:Core/Src/main.c **** 
 479              		.loc 1 294 1 view -0
 480              		.cfi_startproc
 481              		@ args = 0, pretend = 0, frame = 0
 482              		@ frame_needed = 0, uses_anonymous_args = 0
 483 0000 08B5     		push	{r3, lr}
 484              	.LCFI9:
 485              		.cfi_def_cfa_offset 8
 486              		.cfi_offset 3, -8
 487              		.cfi_offset 14, -4
 303:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 488              		.loc 1 303 3 view .LVU131
 303:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 489              		.loc 1 303 19 is_stmt 0 view .LVU132
 490 0002 1748     		ldr	r0, .L38
 491 0004 174B     		ldr	r3, .L38+4
 492 0006 0360     		str	r3, [r0]
 304:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 493              		.loc 1 304 3 is_stmt 1 view .LVU133
 304:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 494              		.loc 1 304 24 is_stmt 0 view .LVU134
 495 0008 4FF4E133 		mov	r3, #115200
 496 000c 4360     		str	r3, [r0, #4]
 305:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 497              		.loc 1 305 3 is_stmt 1 view .LVU135
 305:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 498              		.loc 1 305 26 is_stmt 0 view .LVU136
 499 000e 0023     		movs	r3, #0
 500 0010 8360     		str	r3, [r0, #8]
 306:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 501              		.loc 1 306 3 is_stmt 1 view .LVU137
 306:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 502              		.loc 1 306 24 is_stmt 0 view .LVU138
 503 0012 C360     		str	r3, [r0, #12]
 307:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 504              		.loc 1 307 3 is_stmt 1 view .LVU139
 307:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
ARM GAS  /tmp/ccCSrPeD.s 			page 22


 505              		.loc 1 307 22 is_stmt 0 view .LVU140
 506 0014 0361     		str	r3, [r0, #16]
 308:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 507              		.loc 1 308 3 is_stmt 1 view .LVU141
 308:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 508              		.loc 1 308 20 is_stmt 0 view .LVU142
 509 0016 0C22     		movs	r2, #12
 510 0018 4261     		str	r2, [r0, #20]
 309:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 511              		.loc 1 309 3 is_stmt 1 view .LVU143
 309:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 512              		.loc 1 309 25 is_stmt 0 view .LVU144
 513 001a 8361     		str	r3, [r0, #24]
 310:Core/Src/main.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 514              		.loc 1 310 3 is_stmt 1 view .LVU145
 310:Core/Src/main.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 515              		.loc 1 310 28 is_stmt 0 view .LVU146
 516 001c C361     		str	r3, [r0, #28]
 311:Core/Src/main.c ****   huart2.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 517              		.loc 1 311 3 is_stmt 1 view .LVU147
 311:Core/Src/main.c ****   huart2.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 518              		.loc 1 311 30 is_stmt 0 view .LVU148
 519 001e 0362     		str	r3, [r0, #32]
 312:Core/Src/main.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 520              		.loc 1 312 3 is_stmt 1 view .LVU149
 312:Core/Src/main.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 521              		.loc 1 312 30 is_stmt 0 view .LVU150
 522 0020 4362     		str	r3, [r0, #36]
 313:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 523              		.loc 1 313 3 is_stmt 1 view .LVU151
 313:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 524              		.loc 1 313 38 is_stmt 0 view .LVU152
 525 0022 8362     		str	r3, [r0, #40]
 314:Core/Src/main.c ****   {
 526              		.loc 1 314 3 is_stmt 1 view .LVU153
 314:Core/Src/main.c ****   {
 527              		.loc 1 314 7 is_stmt 0 view .LVU154
 528 0024 FFF7FEFF 		bl	HAL_UART_Init
 529              	.LVL20:
 314:Core/Src/main.c ****   {
 530              		.loc 1 314 6 view .LVU155
 531 0028 88B9     		cbnz	r0, .L34
 318:Core/Src/main.c ****   {
 532              		.loc 1 318 3 is_stmt 1 view .LVU156
 318:Core/Src/main.c ****   {
 533              		.loc 1 318 7 is_stmt 0 view .LVU157
 534 002a 0021     		movs	r1, #0
 535 002c 0C48     		ldr	r0, .L38
 536 002e FFF7FEFF 		bl	HAL_UARTEx_SetTxFifoThreshold
 537              	.LVL21:
 318:Core/Src/main.c ****   {
 538              		.loc 1 318 6 view .LVU158
 539 0032 70B9     		cbnz	r0, .L35
 322:Core/Src/main.c ****   {
 540              		.loc 1 322 3 is_stmt 1 view .LVU159
 322:Core/Src/main.c ****   {
 541              		.loc 1 322 7 is_stmt 0 view .LVU160
ARM GAS  /tmp/ccCSrPeD.s 			page 23


 542 0034 0021     		movs	r1, #0
 543 0036 0A48     		ldr	r0, .L38
 544 0038 FFF7FEFF 		bl	HAL_UARTEx_SetRxFifoThreshold
 545              	.LVL22:
 322:Core/Src/main.c ****   {
 546              		.loc 1 322 6 view .LVU161
 547 003c 58B9     		cbnz	r0, .L36
 326:Core/Src/main.c ****   {
 548              		.loc 1 326 3 is_stmt 1 view .LVU162
 326:Core/Src/main.c ****   {
 549              		.loc 1 326 7 is_stmt 0 view .LVU163
 550 003e 0848     		ldr	r0, .L38
 551 0040 FFF7FEFF 		bl	HAL_UARTEx_DisableFifoMode
 552              	.LVL23:
 326:Core/Src/main.c ****   {
 553              		.loc 1 326 6 view .LVU164
 554 0044 48B9     		cbnz	r0, .L37
 331:Core/Src/main.c **** 
 555              		.loc 1 331 3 is_stmt 1 view .LVU165
 556 0046 0848     		ldr	r0, .L38+8
 557 0048 FFF7FEFF 		bl	printf
 558              	.LVL24:
 335:Core/Src/main.c **** 
 559              		.loc 1 335 1 is_stmt 0 view .LVU166
 560 004c 08BD     		pop	{r3, pc}
 561              	.L34:
 316:Core/Src/main.c ****   }
 562              		.loc 1 316 5 is_stmt 1 view .LVU167
 563 004e FFF7FEFF 		bl	Error_Handler
 564              	.LVL25:
 565              	.L35:
 320:Core/Src/main.c ****   }
 566              		.loc 1 320 5 view .LVU168
 567 0052 FFF7FEFF 		bl	Error_Handler
 568              	.LVL26:
 569              	.L36:
 324:Core/Src/main.c ****   }
 570              		.loc 1 324 5 view .LVU169
 571 0056 FFF7FEFF 		bl	Error_Handler
 572              	.LVL27:
 573              	.L37:
 328:Core/Src/main.c ****   }
 574              		.loc 1 328 5 view .LVU170
 575 005a FFF7FEFF 		bl	Error_Handler
 576              	.LVL28:
 577              	.L39:
 578 005e 00BF     		.align	2
 579              	.L38:
 580 0060 00000000 		.word	.LANCHOR0
 581 0064 00440040 		.word	1073759232
 582 0068 00000000 		.word	.LC3
 583              		.cfi_endproc
 584              	.LFE139:
 586              		.section	.text.MX_TIM4_Init,"ax",%progbits
 587              		.align	1
 588              		.syntax unified
 589              		.thumb
ARM GAS  /tmp/ccCSrPeD.s 			page 24


 590              		.thumb_func
 592              	MX_TIM4_Init:
 593              	.LFB138:
 249:Core/Src/main.c **** 
 594              		.loc 1 249 1 view -0
 595              		.cfi_startproc
 596              		@ args = 0, pretend = 0, frame = 32
 597              		@ frame_needed = 0, uses_anonymous_args = 0
 598 0000 00B5     		push	{lr}
 599              	.LCFI10:
 600              		.cfi_def_cfa_offset 4
 601              		.cfi_offset 14, -4
 602 0002 89B0     		sub	sp, sp, #36
 603              	.LCFI11:
 604              		.cfi_def_cfa_offset 40
 255:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 605              		.loc 1 255 3 view .LVU172
 255:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 606              		.loc 1 255 26 is_stmt 0 view .LVU173
 607 0004 0023     		movs	r3, #0
 608 0006 0493     		str	r3, [sp, #16]
 609 0008 0593     		str	r3, [sp, #20]
 610 000a 0693     		str	r3, [sp, #24]
 611 000c 0793     		str	r3, [sp, #28]
 256:Core/Src/main.c **** 
 612              		.loc 1 256 3 is_stmt 1 view .LVU174
 256:Core/Src/main.c **** 
 613              		.loc 1 256 27 is_stmt 0 view .LVU175
 614 000e 0193     		str	r3, [sp, #4]
 615 0010 0293     		str	r3, [sp, #8]
 616 0012 0393     		str	r3, [sp, #12]
 261:Core/Src/main.c ****   htim4.Init.Prescaler = 100 -1;
 617              		.loc 1 261 3 is_stmt 1 view .LVU176
 261:Core/Src/main.c ****   htim4.Init.Prescaler = 100 -1;
 618              		.loc 1 261 18 is_stmt 0 view .LVU177
 619 0014 1348     		ldr	r0, .L48
 620 0016 144A     		ldr	r2, .L48+4
 621 0018 0260     		str	r2, [r0]
 262:Core/Src/main.c ****   htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 622              		.loc 1 262 3 is_stmt 1 view .LVU178
 262:Core/Src/main.c ****   htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 623              		.loc 1 262 24 is_stmt 0 view .LVU179
 624 001a 6322     		movs	r2, #99
 625 001c 4260     		str	r2, [r0, #4]
 263:Core/Src/main.c ****   htim4.Init.Period = 1279;
 626              		.loc 1 263 3 is_stmt 1 view .LVU180
 263:Core/Src/main.c ****   htim4.Init.Period = 1279;
 627              		.loc 1 263 26 is_stmt 0 view .LVU181
 628 001e 8360     		str	r3, [r0, #8]
 264:Core/Src/main.c ****   htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 629              		.loc 1 264 3 is_stmt 1 view .LVU182
 264:Core/Src/main.c ****   htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 630              		.loc 1 264 21 is_stmt 0 view .LVU183
 631 0020 40F2FF42 		movw	r2, #1279
 632 0024 C260     		str	r2, [r0, #12]
 265:Core/Src/main.c ****   htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 633              		.loc 1 265 3 is_stmt 1 view .LVU184
ARM GAS  /tmp/ccCSrPeD.s 			page 25


 265:Core/Src/main.c ****   htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 634              		.loc 1 265 28 is_stmt 0 view .LVU185
 635 0026 0361     		str	r3, [r0, #16]
 266:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 636              		.loc 1 266 3 is_stmt 1 view .LVU186
 266:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 637              		.loc 1 266 32 is_stmt 0 view .LVU187
 638 0028 8361     		str	r3, [r0, #24]
 267:Core/Src/main.c ****   {
 639              		.loc 1 267 3 is_stmt 1 view .LVU188
 267:Core/Src/main.c ****   {
 640              		.loc 1 267 7 is_stmt 0 view .LVU189
 641 002a FFF7FEFF 		bl	HAL_TIM_Base_Init
 642              	.LVL29:
 267:Core/Src/main.c ****   {
 643              		.loc 1 267 6 view .LVU190
 644 002e 98B9     		cbnz	r0, .L45
 271:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim4, &sClockSourceConfig) != HAL_OK)
 645              		.loc 1 271 3 is_stmt 1 view .LVU191
 271:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim4, &sClockSourceConfig) != HAL_OK)
 646              		.loc 1 271 34 is_stmt 0 view .LVU192
 647 0030 4FF48053 		mov	r3, #4096
 648 0034 0493     		str	r3, [sp, #16]
 272:Core/Src/main.c ****   {
 649              		.loc 1 272 3 is_stmt 1 view .LVU193
 272:Core/Src/main.c ****   {
 650              		.loc 1 272 7 is_stmt 0 view .LVU194
 651 0036 04A9     		add	r1, sp, #16
 652 0038 0A48     		ldr	r0, .L48
 653 003a FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 654              	.LVL30:
 272:Core/Src/main.c ****   {
 655              		.loc 1 272 6 view .LVU195
 656 003e 68B9     		cbnz	r0, .L46
 276:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 657              		.loc 1 276 3 is_stmt 1 view .LVU196
 276:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 658              		.loc 1 276 37 is_stmt 0 view .LVU197
 659 0040 2023     		movs	r3, #32
 660 0042 0193     		str	r3, [sp, #4]
 277:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 661              		.loc 1 277 3 is_stmt 1 view .LVU198
 277:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 662              		.loc 1 277 33 is_stmt 0 view .LVU199
 663 0044 0023     		movs	r3, #0
 664 0046 0393     		str	r3, [sp, #12]
 278:Core/Src/main.c ****   {
 665              		.loc 1 278 3 is_stmt 1 view .LVU200
 278:Core/Src/main.c ****   {
 666              		.loc 1 278 7 is_stmt 0 view .LVU201
 667 0048 01A9     		add	r1, sp, #4
 668 004a 0648     		ldr	r0, .L48
 669 004c FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 670              	.LVL31:
 278:Core/Src/main.c ****   {
 671              		.loc 1 278 6 view .LVU202
 672 0050 30B9     		cbnz	r0, .L47
ARM GAS  /tmp/ccCSrPeD.s 			page 26


 286:Core/Src/main.c **** 
 673              		.loc 1 286 1 view .LVU203
 674 0052 09B0     		add	sp, sp, #36
 675              	.LCFI12:
 676              		.cfi_remember_state
 677              		.cfi_def_cfa_offset 4
 678              		@ sp needed
 679 0054 5DF804FB 		ldr	pc, [sp], #4
 680              	.L45:
 681              	.LCFI13:
 682              		.cfi_restore_state
 269:Core/Src/main.c ****   }
 683              		.loc 1 269 5 is_stmt 1 view .LVU204
 684 0058 FFF7FEFF 		bl	Error_Handler
 685              	.LVL32:
 686              	.L46:
 274:Core/Src/main.c ****   }
 687              		.loc 1 274 5 view .LVU205
 688 005c FFF7FEFF 		bl	Error_Handler
 689              	.LVL33:
 690              	.L47:
 280:Core/Src/main.c ****   }
 691              		.loc 1 280 5 view .LVU206
 692 0060 FFF7FEFF 		bl	Error_Handler
 693              	.LVL34:
 694              	.L49:
 695              		.align	2
 696              	.L48:
 697 0064 00000000 		.word	.LANCHOR4
 698 0068 00080040 		.word	1073743872
 699              		.cfi_endproc
 700              	.LFE138:
 702              		.section	.text.SystemClock_Config,"ax",%progbits
 703              		.align	1
 704              		.global	SystemClock_Config
 705              		.syntax unified
 706              		.thumb
 707              		.thumb_func
 709              	SystemClock_Config:
 710              	.LFB136:
 162:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 711              		.loc 1 162 1 view -0
 712              		.cfi_startproc
 713              		@ args = 0, pretend = 0, frame = 80
 714              		@ frame_needed = 0, uses_anonymous_args = 0
 715 0000 10B5     		push	{r4, lr}
 716              	.LCFI14:
 717              		.cfi_def_cfa_offset 8
 718              		.cfi_offset 4, -8
 719              		.cfi_offset 14, -4
 720 0002 94B0     		sub	sp, sp, #80
 721              	.LCFI15:
 722              		.cfi_def_cfa_offset 88
 163:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 723              		.loc 1 163 3 view .LVU208
 163:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 724              		.loc 1 163 22 is_stmt 0 view .LVU209
ARM GAS  /tmp/ccCSrPeD.s 			page 27


 725 0004 3822     		movs	r2, #56
 726 0006 0021     		movs	r1, #0
 727 0008 06A8     		add	r0, sp, #24
 728 000a FFF7FEFF 		bl	memset
 729              	.LVL35:
 164:Core/Src/main.c **** 
 730              		.loc 1 164 3 is_stmt 1 view .LVU210
 164:Core/Src/main.c **** 
 731              		.loc 1 164 22 is_stmt 0 view .LVU211
 732 000e 0024     		movs	r4, #0
 733 0010 0194     		str	r4, [sp, #4]
 734 0012 0294     		str	r4, [sp, #8]
 735 0014 0394     		str	r4, [sp, #12]
 736 0016 0494     		str	r4, [sp, #16]
 737 0018 0594     		str	r4, [sp, #20]
 168:Core/Src/main.c **** 
 738              		.loc 1 168 3 is_stmt 1 view .LVU212
 739 001a 4FF40070 		mov	r0, #512
 740 001e FFF7FEFF 		bl	HAL_PWREx_ControlVoltageScaling
 741              	.LVL36:
 173:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 742              		.loc 1 173 3 view .LVU213
 173:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 743              		.loc 1 173 36 is_stmt 0 view .LVU214
 744 0022 0223     		movs	r3, #2
 745 0024 0693     		str	r3, [sp, #24]
 174:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 746              		.loc 1 174 3 is_stmt 1 view .LVU215
 174:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 747              		.loc 1 174 30 is_stmt 0 view .LVU216
 748 0026 4FF48073 		mov	r3, #256
 749 002a 0993     		str	r3, [sp, #36]
 175:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 750              		.loc 1 175 3 is_stmt 1 view .LVU217
 175:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 751              		.loc 1 175 41 is_stmt 0 view .LVU218
 752 002c 4023     		movs	r3, #64
 753 002e 0A93     		str	r3, [sp, #40]
 176:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 754              		.loc 1 176 3 is_stmt 1 view .LVU219
 176:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 755              		.loc 1 176 34 is_stmt 0 view .LVU220
 756 0030 0D94     		str	r4, [sp, #52]
 177:Core/Src/main.c ****   {
 757              		.loc 1 177 3 is_stmt 1 view .LVU221
 177:Core/Src/main.c ****   {
 758              		.loc 1 177 7 is_stmt 0 view .LVU222
 759 0032 06A8     		add	r0, sp, #24
 760 0034 FFF7FEFF 		bl	HAL_RCC_OscConfig
 761              	.LVL37:
 177:Core/Src/main.c ****   {
 762              		.loc 1 177 6 view .LVU223
 763 0038 68B9     		cbnz	r0, .L54
 184:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 764              		.loc 1 184 3 is_stmt 1 view .LVU224
 184:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 765              		.loc 1 184 31 is_stmt 0 view .LVU225
ARM GAS  /tmp/ccCSrPeD.s 			page 28


 766 003a 0F23     		movs	r3, #15
 767 003c 0193     		str	r3, [sp, #4]
 186:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 768              		.loc 1 186 3 is_stmt 1 view .LVU226
 186:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 769              		.loc 1 186 34 is_stmt 0 view .LVU227
 770 003e 0123     		movs	r3, #1
 771 0040 0293     		str	r3, [sp, #8]
 187:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 772              		.loc 1 187 3 is_stmt 1 view .LVU228
 187:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 773              		.loc 1 187 35 is_stmt 0 view .LVU229
 774 0042 0021     		movs	r1, #0
 775 0044 0391     		str	r1, [sp, #12]
 188:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 776              		.loc 1 188 3 is_stmt 1 view .LVU230
 188:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 777              		.loc 1 188 36 is_stmt 0 view .LVU231
 778 0046 0491     		str	r1, [sp, #16]
 189:Core/Src/main.c **** 
 779              		.loc 1 189 3 is_stmt 1 view .LVU232
 189:Core/Src/main.c **** 
 780              		.loc 1 189 36 is_stmt 0 view .LVU233
 781 0048 0591     		str	r1, [sp, #20]
 191:Core/Src/main.c ****   {
 782              		.loc 1 191 3 is_stmt 1 view .LVU234
 191:Core/Src/main.c ****   {
 783              		.loc 1 191 7 is_stmt 0 view .LVU235
 784 004a 01A8     		add	r0, sp, #4
 785 004c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 786              	.LVL38:
 191:Core/Src/main.c ****   {
 787              		.loc 1 191 6 view .LVU236
 788 0050 18B9     		cbnz	r0, .L55
 195:Core/Src/main.c **** 
 789              		.loc 1 195 1 view .LVU237
 790 0052 14B0     		add	sp, sp, #80
 791              	.LCFI16:
 792              		.cfi_remember_state
 793              		.cfi_def_cfa_offset 8
 794              		@ sp needed
 795 0054 10BD     		pop	{r4, pc}
 796              	.L54:
 797              	.LCFI17:
 798              		.cfi_restore_state
 179:Core/Src/main.c ****   }
 799              		.loc 1 179 5 is_stmt 1 view .LVU238
 800 0056 FFF7FEFF 		bl	Error_Handler
 801              	.LVL39:
 802              	.L55:
 193:Core/Src/main.c ****   }
 803              		.loc 1 193 5 view .LVU239
 804 005a FFF7FEFF 		bl	Error_Handler
 805              	.LVL40:
 806              		.cfi_endproc
 807              	.LFE136:
 809              		.section	.text.main,"ax",%progbits
ARM GAS  /tmp/ccCSrPeD.s 			page 29


 810              		.align	1
 811              		.global	main
 812              		.syntax unified
 813              		.thumb
 814              		.thumb_func
 816              	main:
 817              	.LFB135:
  78:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 818              		.loc 1 78 1 view -0
 819              		.cfi_startproc
 820              		@ Volatile: function does not return.
 821              		@ args = 0, pretend = 0, frame = 0
 822              		@ frame_needed = 0, uses_anonymous_args = 0
 823 0000 80B5     		push	{r7, lr}
 824              	.LCFI18:
 825              		.cfi_def_cfa_offset 8
 826              		.cfi_offset 7, -8
 827              		.cfi_offset 14, -4
  86:Core/Src/main.c **** 
 828              		.loc 1 86 3 view .LVU241
 829 0002 FFF7FEFF 		bl	HAL_Init
 830              	.LVL41:
  93:Core/Src/main.c **** 
 831              		.loc 1 93 3 view .LVU242
 832 0006 FFF7FEFF 		bl	SystemClock_Config
 833              	.LVL42:
 100:Core/Src/main.c ****   MX_FDCAN1_Init();
 834              		.loc 1 100 3 view .LVU243
 835 000a FFF7FEFF 		bl	MX_GPIO_Init
 836              	.LVL43:
 101:Core/Src/main.c ****   MX_USART2_UART_Init();
 837              		.loc 1 101 3 view .LVU244
 838 000e FFF7FEFF 		bl	MX_FDCAN1_Init
 839              	.LVL44:
 102:Core/Src/main.c ****   MX_TIM4_Init();
 840              		.loc 1 102 3 view .LVU245
 841 0012 FFF7FEFF 		bl	MX_USART2_UART_Init
 842              	.LVL45:
 103:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 843              		.loc 1 103 3 view .LVU246
 844 0016 FFF7FEFF 		bl	MX_TIM4_Init
 845              	.LVL46:
 105:Core/Src/main.c ****   tx_header.Identifier = 0x680;
 846              		.loc 1 105 3 view .LVU247
 105:Core/Src/main.c ****   tx_header.Identifier = 0x680;
 847              		.loc 1 105 13 is_stmt 0 view .LVU248
 848 001a 0022     		movs	r2, #0
 849 001c 404B     		ldr	r3, .L59
 850 001e 1A60     		str	r2, [r3]
 106:Core/Src/main.c ****   tx_header.IdType = FDCAN_STANDARD_ID;
 851              		.loc 1 106 3 is_stmt 1 view .LVU249
 106:Core/Src/main.c ****   tx_header.IdType = FDCAN_STANDARD_ID;
 852              		.loc 1 106 24 is_stmt 0 view .LVU250
 853 0020 404B     		ldr	r3, .L59+4
 854 0022 4FF4D061 		mov	r1, #1664
 855 0026 1960     		str	r1, [r3]
 107:Core/Src/main.c ****   tx_header.TxFrameType = FDCAN_DATA_FRAME;
ARM GAS  /tmp/ccCSrPeD.s 			page 30


 856              		.loc 1 107 3 is_stmt 1 view .LVU251
 107:Core/Src/main.c ****   tx_header.TxFrameType = FDCAN_DATA_FRAME;
 857              		.loc 1 107 20 is_stmt 0 view .LVU252
 858 0028 5A60     		str	r2, [r3, #4]
 108:Core/Src/main.c ****   tx_header.DataLength = FDCAN_DLC_BYTES_8; // Specifies the number of data bytes to be transmitted
 859              		.loc 1 108 3 is_stmt 1 view .LVU253
 108:Core/Src/main.c ****   tx_header.DataLength = FDCAN_DLC_BYTES_8; // Specifies the number of data bytes to be transmitted
 860              		.loc 1 108 25 is_stmt 0 view .LVU254
 861 002a 9A60     		str	r2, [r3, #8]
 109:Core/Src/main.c ****   tx_header.BitRateSwitch = FDCAN_BRS_OFF;
 862              		.loc 1 109 3 is_stmt 1 view .LVU255
 109:Core/Src/main.c ****   tx_header.BitRateSwitch = FDCAN_BRS_OFF;
 863              		.loc 1 109 24 is_stmt 0 view .LVU256
 864 002c 0821     		movs	r1, #8
 865 002e D960     		str	r1, [r3, #12]
 110:Core/Src/main.c ****   tx_header.FDFormat = FDCAN_CLASSIC_CAN;
 866              		.loc 1 110 3 is_stmt 1 view .LVU257
 110:Core/Src/main.c ****   tx_header.FDFormat = FDCAN_CLASSIC_CAN;
 867              		.loc 1 110 27 is_stmt 0 view .LVU258
 868 0030 5A61     		str	r2, [r3, #20]
 111:Core/Src/main.c ****   tx_header.TxEventFifoControl = FDCAN_NO_TX_EVENTS;
 869              		.loc 1 111 3 is_stmt 1 view .LVU259
 111:Core/Src/main.c ****   tx_header.TxEventFifoControl = FDCAN_NO_TX_EVENTS;
 870              		.loc 1 111 22 is_stmt 0 view .LVU260
 871 0032 9A61     		str	r2, [r3, #24]
 112:Core/Src/main.c **** 
 872              		.loc 1 112 3 is_stmt 1 view .LVU261
 112:Core/Src/main.c **** 
 873              		.loc 1 112 32 is_stmt 0 view .LVU262
 874 0034 DA61     		str	r2, [r3, #28]
 115:Core/Src/main.c ****   /* USER CODE END 2 */
 875              		.loc 1 115 4 is_stmt 1 view .LVU263
 876 0036 3C48     		ldr	r0, .L59+8
 877 0038 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 878              	.LVL47:
 879              	.L57:
 120:Core/Src/main.c ****   {
 880              		.loc 1 120 3 discriminator 1 view .LVU264
 127:Core/Src/main.c ****     button_inputs = button_inputs | HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_13);        // PB6, J8
 881              		.loc 1 127 5 discriminator 1 view .LVU265
 127:Core/Src/main.c ****     button_inputs = button_inputs | HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_13);        // PB6, J8
 882              		.loc 1 127 19 is_stmt 0 discriminator 1 view .LVU266
 883 003c 3B4C     		ldr	r4, .L59+12
 884 003e 0025     		movs	r5, #0
 885 0040 2570     		strb	r5, [r4]
 128:Core/Src/main.c ****     button_inputs = button_inputs | (HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_14)) << 1; // PB5, J5
 886              		.loc 1 128 5 is_stmt 1 discriminator 1 view .LVU267
 128:Core/Src/main.c ****     button_inputs = button_inputs | (HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_14)) << 1; // PB5, J5
 887              		.loc 1 128 37 is_stmt 0 discriminator 1 view .LVU268
 888 0042 3B4E     		ldr	r6, .L59+16
 889 0044 4FF40051 		mov	r1, #8192
 890 0048 3046     		mov	r0, r6
 891 004a FFF7FEFF 		bl	HAL_GPIO_ReadPin
 892              	.LVL48:
 128:Core/Src/main.c ****     button_inputs = button_inputs | (HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_14)) << 1; // PB5, J5
 893              		.loc 1 128 19 discriminator 1 view .LVU269
 894 004e 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
ARM GAS  /tmp/ccCSrPeD.s 			page 31


 895 0050 1843     		orrs	r0, r0, r3
 896 0052 2070     		strb	r0, [r4]
 129:Core/Src/main.c ****     button_inputs = button_inputs | (HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_15)) << 2; // PB4, J13
 897              		.loc 1 129 5 is_stmt 1 discriminator 1 view .LVU270
 129:Core/Src/main.c ****     button_inputs = button_inputs | (HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_15)) << 2; // PB4, J13
 898              		.loc 1 129 38 is_stmt 0 discriminator 1 view .LVU271
 899 0054 4FF48041 		mov	r1, #16384
 900 0058 3046     		mov	r0, r6
 901 005a FFF7FEFF 		bl	HAL_GPIO_ReadPin
 902              	.LVL49:
 129:Core/Src/main.c ****     button_inputs = button_inputs | (HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_15)) << 2; // PB4, J13
 903              		.loc 1 129 35 discriminator 1 view .LVU272
 904 005e 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 905 0060 43EA4003 		orr	r3, r3, r0, lsl #1
 129:Core/Src/main.c ****     button_inputs = button_inputs | (HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_15)) << 2; // PB4, J13
 906              		.loc 1 129 19 discriminator 1 view .LVU273
 907 0064 2370     		strb	r3, [r4]
 130:Core/Src/main.c ****     button_inputs = button_inputs | (HAL_GPIO_ReadPin(GPIOF, GPIO_PIN_1)) << 3;  // PB3, J11
 908              		.loc 1 130 5 is_stmt 1 discriminator 1 view .LVU274
 130:Core/Src/main.c ****     button_inputs = button_inputs | (HAL_GPIO_ReadPin(GPIOF, GPIO_PIN_1)) << 3;  // PB3, J11
 909              		.loc 1 130 38 is_stmt 0 discriminator 1 view .LVU275
 910 0066 4FF40041 		mov	r1, #32768
 911 006a 3046     		mov	r0, r6
 912 006c FFF7FEFF 		bl	HAL_GPIO_ReadPin
 913              	.LVL50:
 130:Core/Src/main.c ****     button_inputs = button_inputs | (HAL_GPIO_ReadPin(GPIOF, GPIO_PIN_1)) << 3;  // PB3, J11
 914              		.loc 1 130 35 discriminator 1 view .LVU276
 915 0070 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 916 0072 43EA8003 		orr	r3, r3, r0, lsl #2
 130:Core/Src/main.c ****     button_inputs = button_inputs | (HAL_GPIO_ReadPin(GPIOF, GPIO_PIN_1)) << 3;  // PB3, J11
 917              		.loc 1 130 19 discriminator 1 view .LVU277
 918 0076 2370     		strb	r3, [r4]
 131:Core/Src/main.c ****     button_inputs = button_inputs | (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_0)) << 4;  // PB2, J9
 919              		.loc 1 131 5 is_stmt 1 discriminator 1 view .LVU278
 131:Core/Src/main.c ****     button_inputs = button_inputs | (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_0)) << 4;  // PB2, J9
 920              		.loc 1 131 38 is_stmt 0 discriminator 1 view .LVU279
 921 0078 0221     		movs	r1, #2
 922 007a 2E48     		ldr	r0, .L59+20
 923 007c FFF7FEFF 		bl	HAL_GPIO_ReadPin
 924              	.LVL51:
 131:Core/Src/main.c ****     button_inputs = button_inputs | (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_0)) << 4;  // PB2, J9
 925              		.loc 1 131 35 discriminator 1 view .LVU280
 926 0080 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 927 0082 43EAC003 		orr	r3, r3, r0, lsl #3
 131:Core/Src/main.c ****     button_inputs = button_inputs | (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_0)) << 4;  // PB2, J9
 928              		.loc 1 131 19 discriminator 1 view .LVU281
 929 0086 2370     		strb	r3, [r4]
 132:Core/Src/main.c ****     button_inputs = button_inputs | (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_1)) << 5;  // PB1, J7
 930              		.loc 1 132 5 is_stmt 1 discriminator 1 view .LVU282
 132:Core/Src/main.c ****     button_inputs = button_inputs | (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_1)) << 5;  // PB1, J7
 931              		.loc 1 132 38 is_stmt 0 discriminator 1 view .LVU283
 932 0088 0121     		movs	r1, #1
 933 008a 4FF09040 		mov	r0, #1207959552
 934 008e FFF7FEFF 		bl	HAL_GPIO_ReadPin
 935              	.LVL52:
 132:Core/Src/main.c ****     button_inputs = button_inputs | (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_1)) << 5;  // PB1, J7
 936              		.loc 1 132 35 discriminator 1 view .LVU284
ARM GAS  /tmp/ccCSrPeD.s 			page 32


 937 0092 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 938 0094 43EA0013 		orr	r3, r3, r0, lsl #4
 132:Core/Src/main.c ****     button_inputs = button_inputs | (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_1)) << 5;  // PB1, J7
 939              		.loc 1 132 19 discriminator 1 view .LVU285
 940 0098 2370     		strb	r3, [r4]
 133:Core/Src/main.c ****     button_inputs = button_inputs | (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)) << 6;  // PB9, J12
 941              		.loc 1 133 5 is_stmt 1 discriminator 1 view .LVU286
 133:Core/Src/main.c ****     button_inputs = button_inputs | (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)) << 6;  // PB9, J12
 942              		.loc 1 133 38 is_stmt 0 discriminator 1 view .LVU287
 943 009a 0221     		movs	r1, #2
 944 009c 4FF09040 		mov	r0, #1207959552
 945 00a0 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 946              	.LVL53:
 133:Core/Src/main.c ****     button_inputs = button_inputs | (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)) << 6;  // PB9, J12
 947              		.loc 1 133 35 discriminator 1 view .LVU288
 948 00a4 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 949 00a6 43EA4013 		orr	r3, r3, r0, lsl #5
 133:Core/Src/main.c ****     button_inputs = button_inputs | (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)) << 6;  // PB9, J12
 950              		.loc 1 133 19 discriminator 1 view .LVU289
 951 00aa 2370     		strb	r3, [r4]
 134:Core/Src/main.c ****     button_inputs = button_inputs | (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_0)) << 7;  // PB8, J10
 952              		.loc 1 134 5 is_stmt 1 discriminator 1 view .LVU290
 134:Core/Src/main.c ****     button_inputs = button_inputs | (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_0)) << 7;  // PB8, J10
 953              		.loc 1 134 38 is_stmt 0 discriminator 1 view .LVU291
 954 00ac 8021     		movs	r1, #128
 955 00ae 4FF09040 		mov	r0, #1207959552
 956 00b2 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 957              	.LVL54:
 134:Core/Src/main.c ****     button_inputs = button_inputs | (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_0)) << 7;  // PB8, J10
 958              		.loc 1 134 35 discriminator 1 view .LVU292
 959 00b6 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 960 00b8 43EA8013 		orr	r3, r3, r0, lsl #6
 134:Core/Src/main.c ****     button_inputs = button_inputs | (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_0)) << 7;  // PB8, J10
 961              		.loc 1 134 19 discriminator 1 view .LVU293
 962 00bc 2370     		strb	r3, [r4]
 135:Core/Src/main.c **** 
 963              		.loc 1 135 5 is_stmt 1 discriminator 1 view .LVU294
 135:Core/Src/main.c **** 
 964              		.loc 1 135 38 is_stmt 0 discriminator 1 view .LVU295
 965 00be 1E4F     		ldr	r7, .L59+24
 966 00c0 0121     		movs	r1, #1
 967 00c2 3846     		mov	r0, r7
 968 00c4 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 969              	.LVL55:
 135:Core/Src/main.c **** 
 970              		.loc 1 135 35 discriminator 1 view .LVU296
 971 00c8 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 972 00ca 43EAC013 		orr	r3, r3, r0, lsl #7
 135:Core/Src/main.c **** 
 973              		.loc 1 135 19 discriminator 1 view .LVU297
 974 00ce 2370     		strb	r3, [r4]
 137:Core/Src/main.c ****     paddle_inputs = paddle_inputs | HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_5);        // PA5, J1
 975              		.loc 1 137 5 is_stmt 1 discriminator 1 view .LVU298
 137:Core/Src/main.c ****     paddle_inputs = paddle_inputs | HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_5);        // PA5, J1
 976              		.loc 1 137 19 is_stmt 0 discriminator 1 view .LVU299
 977 00d0 1A4E     		ldr	r6, .L59+28
 978 00d2 3570     		strb	r5, [r6]
ARM GAS  /tmp/ccCSrPeD.s 			page 33


 138:Core/Src/main.c ****     paddle_inputs = paddle_inputs | (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6)) << 1; // PA6, J2
 979              		.loc 1 138 5 is_stmt 1 discriminator 1 view .LVU300
 138:Core/Src/main.c ****     paddle_inputs = paddle_inputs | (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6)) << 1; // PA6, J2
 980              		.loc 1 138 37 is_stmt 0 discriminator 1 view .LVU301
 981 00d4 2021     		movs	r1, #32
 982 00d6 4FF09040 		mov	r0, #1207959552
 983 00da FFF7FEFF 		bl	HAL_GPIO_ReadPin
 984              	.LVL56:
 138:Core/Src/main.c ****     paddle_inputs = paddle_inputs | (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6)) << 1; // PA6, J2
 985              		.loc 1 138 19 discriminator 1 view .LVU302
 986 00de 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 987 00e0 1843     		orrs	r0, r0, r3
 988 00e2 3070     		strb	r0, [r6]
 139:Core/Src/main.c ****     paddle_inputs = paddle_inputs | (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_1)) << 2; // PB7
 989              		.loc 1 139 5 is_stmt 1 discriminator 1 view .LVU303
 139:Core/Src/main.c ****     paddle_inputs = paddle_inputs | (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_1)) << 2; // PB7
 990              		.loc 1 139 38 is_stmt 0 discriminator 1 view .LVU304
 991 00e4 4021     		movs	r1, #64
 992 00e6 4FF09040 		mov	r0, #1207959552
 993 00ea FFF7FEFF 		bl	HAL_GPIO_ReadPin
 994              	.LVL57:
 139:Core/Src/main.c ****     paddle_inputs = paddle_inputs | (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_1)) << 2; // PB7
 995              		.loc 1 139 35 discriminator 1 view .LVU305
 996 00ee 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 997 00f0 43EA4003 		orr	r3, r3, r0, lsl #1
 139:Core/Src/main.c ****     paddle_inputs = paddle_inputs | (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_1)) << 2; // PB7
 998              		.loc 1 139 19 discriminator 1 view .LVU306
 999 00f4 3370     		strb	r3, [r6]
 140:Core/Src/main.c **** 
 1000              		.loc 1 140 5 is_stmt 1 discriminator 1 view .LVU307
 140:Core/Src/main.c **** 
 1001              		.loc 1 140 38 is_stmt 0 discriminator 1 view .LVU308
 1002 00f6 0221     		movs	r1, #2
 1003 00f8 3846     		mov	r0, r7
 1004 00fa FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1005              	.LVL58:
 140:Core/Src/main.c **** 
 1006              		.loc 1 140 35 discriminator 1 view .LVU309
 1007 00fe 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 1008 0100 43EA8000 		orr	r0, r3, r0, lsl #2
 1009 0104 C0B2     		uxtb	r0, r0
 140:Core/Src/main.c **** 
 1010              		.loc 1 140 19 discriminator 1 view .LVU310
 1011 0106 3070     		strb	r0, [r6]
 143:Core/Src/main.c ****     can_message_content[1] = paddle_inputs;
 1012              		.loc 1 143 5 is_stmt 1 discriminator 1 view .LVU311
 143:Core/Src/main.c ****     can_message_content[1] = paddle_inputs;
 1013              		.loc 1 143 28 is_stmt 0 discriminator 1 view .LVU312
 1014 0108 0D4B     		ldr	r3, .L59+32
 1015 010a 2278     		ldrb	r2, [r4]	@ zero_extendqisi2
 1016 010c 1A70     		strb	r2, [r3]
 144:Core/Src/main.c ****     can_message_content[2] = 0x00;
 1017              		.loc 1 144 5 is_stmt 1 discriminator 1 view .LVU313
 144:Core/Src/main.c ****     can_message_content[2] = 0x00;
 1018              		.loc 1 144 28 is_stmt 0 discriminator 1 view .LVU314
 1019 010e 5870     		strb	r0, [r3, #1]
 145:Core/Src/main.c ****     can_message_content[3] = 0x00;
ARM GAS  /tmp/ccCSrPeD.s 			page 34


 1020              		.loc 1 145 5 is_stmt 1 discriminator 1 view .LVU315
 145:Core/Src/main.c ****     can_message_content[3] = 0x00;
 1021              		.loc 1 145 28 is_stmt 0 discriminator 1 view .LVU316
 1022 0110 9D70     		strb	r5, [r3, #2]
 146:Core/Src/main.c ****     can_message_content[4] = 0x00;
 1023              		.loc 1 146 5 is_stmt 1 discriminator 1 view .LVU317
 146:Core/Src/main.c ****     can_message_content[4] = 0x00;
 1024              		.loc 1 146 28 is_stmt 0 discriminator 1 view .LVU318
 1025 0112 DD70     		strb	r5, [r3, #3]
 147:Core/Src/main.c ****     can_message_content[5] = 0x00;
 1026              		.loc 1 147 5 is_stmt 1 discriminator 1 view .LVU319
 147:Core/Src/main.c ****     can_message_content[5] = 0x00;
 1027              		.loc 1 147 28 is_stmt 0 discriminator 1 view .LVU320
 1028 0114 1D71     		strb	r5, [r3, #4]
 148:Core/Src/main.c ****     can_message_content[6] = 0x00;
 1029              		.loc 1 148 5 is_stmt 1 discriminator 1 view .LVU321
 148:Core/Src/main.c ****     can_message_content[6] = 0x00;
 1030              		.loc 1 148 28 is_stmt 0 discriminator 1 view .LVU322
 1031 0116 5D71     		strb	r5, [r3, #5]
 149:Core/Src/main.c ****     can_message_content[7] = 0x00;
 1032              		.loc 1 149 5 is_stmt 1 discriminator 1 view .LVU323
 149:Core/Src/main.c ****     can_message_content[7] = 0x00;
 1033              		.loc 1 149 28 is_stmt 0 discriminator 1 view .LVU324
 1034 0118 9D71     		strb	r5, [r3, #6]
 150:Core/Src/main.c **** 
 1035              		.loc 1 150 5 is_stmt 1 discriminator 1 view .LVU325
 150:Core/Src/main.c **** 
 1036              		.loc 1 150 28 is_stmt 0 discriminator 1 view .LVU326
 1037 011a DD71     		strb	r5, [r3, #7]
 120:Core/Src/main.c ****   {
 1038              		.loc 1 120 9 is_stmt 1 discriminator 1 view .LVU327
 1039 011c 8EE7     		b	.L57
 1040              	.L60:
 1041 011e 00BF     		.align	2
 1042              	.L59:
 1043 0120 00000000 		.word	.LANCHOR5
 1044 0124 00000000 		.word	.LANCHOR3
 1045 0128 00000000 		.word	.LANCHOR4
 1046 012c 00000000 		.word	.LANCHOR6
 1047 0130 00080048 		.word	1207961600
 1048 0134 00140048 		.word	1207964672
 1049 0138 00040048 		.word	1207960576
 1050 013c 00000000 		.word	.LANCHOR7
 1051 0140 00000000 		.word	.LANCHOR2
 1052              		.cfi_endproc
 1053              	.LFE135:
 1055              		.global	last_tick
 1056              		.global	paddle_inputs
 1057              		.global	button_inputs
 1058              		.global	can_message_content
 1059              		.global	tx_header
 1060              		.global	huart2
 1061              		.global	htim4
 1062              		.global	hfdcan1
 1063              		.section	.bss.button_inputs,"aw",%nobits
 1064              		.set	.LANCHOR6,. + 0
 1067              	button_inputs:
ARM GAS  /tmp/ccCSrPeD.s 			page 35


 1068 0000 00       		.space	1
 1069              		.section	.bss.can_message_content,"aw",%nobits
 1070              		.align	2
 1071              		.set	.LANCHOR2,. + 0
 1074              	can_message_content:
 1075 0000 00000000 		.space	8
 1075      00000000 
 1076              		.section	.bss.hfdcan1,"aw",%nobits
 1077              		.align	2
 1078              		.set	.LANCHOR1,. + 0
 1081              	hfdcan1:
 1082 0000 00000000 		.space	100
 1082      00000000 
 1082      00000000 
 1082      00000000 
 1082      00000000 
 1083              		.section	.bss.htim4,"aw",%nobits
 1084              		.align	2
 1085              		.set	.LANCHOR4,. + 0
 1088              	htim4:
 1089 0000 00000000 		.space	76
 1089      00000000 
 1089      00000000 
 1089      00000000 
 1089      00000000 
 1090              		.section	.bss.huart2,"aw",%nobits
 1091              		.align	2
 1092              		.set	.LANCHOR0,. + 0
 1095              	huart2:
 1096 0000 00000000 		.space	148
 1096      00000000 
 1096      00000000 
 1096      00000000 
 1096      00000000 
 1097              		.section	.bss.last_tick,"aw",%nobits
 1098              		.align	2
 1099              		.set	.LANCHOR5,. + 0
 1102              	last_tick:
 1103 0000 00000000 		.space	4
 1104              		.section	.bss.paddle_inputs,"aw",%nobits
 1105              		.set	.LANCHOR7,. + 0
 1108              	paddle_inputs:
 1109 0000 00       		.space	1
 1110              		.section	.bss.tx_header,"aw",%nobits
 1111              		.align	2
 1112              		.set	.LANCHOR3,. + 0
 1115              	tx_header:
 1116 0000 00000000 		.space	36
 1116      00000000 
 1116      00000000 
 1116      00000000 
 1116      00000000 
 1117              		.text
 1118              	.Letext0:
 1119              		.file 3 "/home/dev/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/machine/_default_types.h"
 1120              		.file 4 "/home/dev/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/sys/_stdint.h"
 1121              		.file 5 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g431xx.h"
ARM GAS  /tmp/ccCSrPeD.s 			page 36


 1122              		.file 6 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g4xx.h"
 1123              		.file 7 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_def.h"
 1124              		.file 8 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_rcc.h"
 1125              		.file 9 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_gpio.h"
 1126              		.file 10 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_dma.h"
 1127              		.file 11 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_fdcan.h"
 1128              		.file 12 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_tim.h"
 1129              		.file 13 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_uart.h"
 1130              		.file 14 "/home/dev/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/stdio.h"
 1131              		.file 15 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_uart_ex.h"
 1132              		.file 16 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_tim_ex.h"
 1133              		.file 17 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_pwr_ex.h"
 1134              		.file 18 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal.h"
 1135              		.file 19 "<built-in>"
ARM GAS  /tmp/ccCSrPeD.s 			page 37


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccCSrPeD.s:20     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccCSrPeD.s:25     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccCSrPeD.s:174    .text.MX_GPIO_Init:00000000000000a0 $d
     /tmp/ccCSrPeD.s:182    .text._write:0000000000000000 $t
     /tmp/ccCSrPeD.s:188    .text._write:0000000000000000 _write
     /tmp/ccCSrPeD.s:221    .text._write:0000000000000014 $d
     /tmp/ccCSrPeD.s:226    .rodata.HAL_TIM_PeriodElapsedCallback.str1.4:0000000000000000 $d
     /tmp/ccCSrPeD.s:233    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/ccCSrPeD.s:239    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/ccCSrPeD.s:297    .text.HAL_TIM_PeriodElapsedCallback:0000000000000034 $d
     /tmp/ccCSrPeD.s:306    .rodata.Error_Handler.str1.4:0000000000000000 $d
     /tmp/ccCSrPeD.s:310    .text.Error_Handler:0000000000000000 $t
     /tmp/ccCSrPeD.s:316    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccCSrPeD.s:355    .text.Error_Handler:000000000000000c $d
     /tmp/ccCSrPeD.s:360    .text.MX_FDCAN1_Init:0000000000000000 $t
     /tmp/ccCSrPeD.s:365    .text.MX_FDCAN1_Init:0000000000000000 MX_FDCAN1_Init
     /tmp/ccCSrPeD.s:462    .text.MX_FDCAN1_Init:000000000000004c $d
     /tmp/ccCSrPeD.s:468    .rodata.MX_USART2_UART_Init.str1.4:0000000000000000 $d
     /tmp/ccCSrPeD.s:472    .text.MX_USART2_UART_Init:0000000000000000 $t
     /tmp/ccCSrPeD.s:477    .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
     /tmp/ccCSrPeD.s:580    .text.MX_USART2_UART_Init:0000000000000060 $d
     /tmp/ccCSrPeD.s:587    .text.MX_TIM4_Init:0000000000000000 $t
     /tmp/ccCSrPeD.s:592    .text.MX_TIM4_Init:0000000000000000 MX_TIM4_Init
     /tmp/ccCSrPeD.s:697    .text.MX_TIM4_Init:0000000000000064 $d
     /tmp/ccCSrPeD.s:703    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccCSrPeD.s:709    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccCSrPeD.s:810    .text.main:0000000000000000 $t
     /tmp/ccCSrPeD.s:816    .text.main:0000000000000000 main
     /tmp/ccCSrPeD.s:1043   .text.main:0000000000000120 $d
     /tmp/ccCSrPeD.s:1102   .bss.last_tick:0000000000000000 last_tick
     /tmp/ccCSrPeD.s:1108   .bss.paddle_inputs:0000000000000000 paddle_inputs
     /tmp/ccCSrPeD.s:1067   .bss.button_inputs:0000000000000000 button_inputs
     /tmp/ccCSrPeD.s:1074   .bss.can_message_content:0000000000000000 can_message_content
     /tmp/ccCSrPeD.s:1115   .bss.tx_header:0000000000000000 tx_header
     /tmp/ccCSrPeD.s:1095   .bss.huart2:0000000000000000 huart2
     /tmp/ccCSrPeD.s:1088   .bss.htim4:0000000000000000 htim4
     /tmp/ccCSrPeD.s:1081   .bss.hfdcan1:0000000000000000 hfdcan1
     /tmp/ccCSrPeD.s:1068   .bss.button_inputs:0000000000000000 $d
     /tmp/ccCSrPeD.s:1070   .bss.can_message_content:0000000000000000 $d
     /tmp/ccCSrPeD.s:1077   .bss.hfdcan1:0000000000000000 $d
     /tmp/ccCSrPeD.s:1084   .bss.htim4:0000000000000000 $d
     /tmp/ccCSrPeD.s:1091   .bss.huart2:0000000000000000 $d
     /tmp/ccCSrPeD.s:1098   .bss.last_tick:0000000000000000 $d
     /tmp/ccCSrPeD.s:1109   .bss.paddle_inputs:0000000000000000 $d
     /tmp/ccCSrPeD.s:1111   .bss.tx_header:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_Init
HAL_UART_Transmit
HAL_FDCAN_GetProtocolStatus
printf
HAL_FDCAN_AddMessageToTxFifoQ
HAL_FDCAN_Init
HAL_FDCAN_Start
HAL_UART_Init
ARM GAS  /tmp/ccCSrPeD.s 			page 38


HAL_UARTEx_SetTxFifoThreshold
HAL_UARTEx_SetRxFifoThreshold
HAL_UARTEx_DisableFifoMode
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIMEx_MasterConfigSynchronization
memset
HAL_PWREx_ControlVoltageScaling
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_TIM_Base_Start_IT
HAL_GPIO_ReadPin
